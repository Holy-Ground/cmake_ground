cmake_minimum_required(VERSION 3.11)

set(LIBRARY_NAME CMAKE_GROUND_EXAMPLE)
set(LIBRARY_VERSION 0.0.1)

project(${LIBRARY_NAME} VERSION ${LIBRARY_VERSION} LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(${LIBRARY_NAME}_PATH ${CMAKE_CURRENT_SOURCE_DIR})
set(${LIBRARY_NAME}_SOURCE_PATH "${${LIBRARY_NAME}_PATH}/src")
set(${LIBRARY_NAME}_INCLUDE_PATH "${${LIBRARY_NAME}_PATH}/include")
set(${LIBRARY_NAME}_TEST_PATH "${${LIBRARY_NAME}_PATH}/test")
set(${LIBRARY_NAME}_RESOURCE_PATH "${${LIBRARY_NAME}_PATH}/resource")
set(${LIBRARY_NAME}_THIRDPARTY_PATH "${${LIBRARY_NAME}_PATH}/thirdparty")

message(STATUS "LIBRARY_NAME: ${LIBRARY_NAME}")
message(STATUS "LIBRARY_VERSION: ${LIBRARY_VERSION}")
message(STATUS "${LIBRARY_NAME}_PATH: ${${LIBRARY_NAME}_PATH}")
message(STATUS "${LIBRARY_NAME}_SOURCE_PATH: ${${LIBRARY_NAME}_SOURCE_PATH}")
message(STATUS "${LIBRARY_NAME}_INCLUDE_PATH: ${${LIBRARY_NAME}_INCLUDE_PATH}")
message(STATUS "${LIBRARY_NAME}_TEST_PATH: ${${LIBRARY_NAME}_TEST_PATH}")
message(STATUS "${LIBRARY_NAME}_RESOURCE_PATH: ${${LIBRARY_NAME}_RESOURCE_PATH}")
message(STATUS "${LIBRARY_NAME}_THIRDPARTY_PATH: ${${LIBRARY_NAME}_THIRDPARTY_PATH}")

set(${LIBRARY_NAME}_SOURCE_FILES
  src/utils.cpp
)
add_library(${LIBRARY_NAME} STATIC
  ${${LIBRARY_NAME}_SOURCE_FILES}
)
target_include_directories(${LIBRARY_NAME} PUBLIC
  ${${LIBRARY_NAME}_INCLUDE_PATH}
)
target_compile_options(${LIBRARY_NAME} PRIVATE
  -Wall -Wextra -Wpedantic -Werror
)

add_subdirectory(${${LIBRARY_NAME}_TEST_PATH})
